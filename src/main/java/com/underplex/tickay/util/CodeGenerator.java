package com.underplex.tickay.util;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.sun.codemodel.internal.JBlock;
import com.sun.codemodel.internal.JClass;
import com.sun.codemodel.internal.JClassAlreadyExistsException;
import com.sun.codemodel.internal.JCodeModel;
import com.sun.codemodel.internal.JDefinedClass;
import com.sun.codemodel.internal.JFieldVar;
import com.sun.codemodel.internal.JMethod;
import com.sun.codemodel.internal.JMods;

/**
 * Utility class meant to be run on ad-hoc basis to generate -Info classes for -Entry classes generated by JAXB.
 * <p>
 * This is probably out of date.
 * @author Brandon Irvine
 *
 */
public class CodeGenerator {

	public static void main(String[] args) {
		// for every class in JAXB, do two things...
		// 1. create an -Info class in jaxbinfo
		// 2. make it implement InfoSource<ClassYouJustCreated>

		// generate source code by populating the 'cm' tree.
		JCodeModel cm = new JCodeModel();

		JDefinedClass clazz;
		JMethod constructor;
		JClass paramClazz; 
		JFieldVar sourceVar;
		JMods modifiers;
		JBlock block;
		
		List<JDefinedClass> clazzList = new ArrayList<>();

		List<String> clazzNames = new ArrayList<>();

		clazzNames.add("BuildStationEntry");
		clazzNames.add("ClaimRouteEntry");
		clazzNames.add("DeckDrawEntry");
		clazzNames.add("DrawTicketsEntry");
		clazzNames.add("EuroGameEntry");
		clazzNames.add("FirstDiscardEntry");
		clazzNames.add("PlayerDefinitionEntry");
		clazzNames.add("SetupEntry");
		clazzNames.add("SingleTakeEntry");
		clazzNames.add("StationChoiceEntry");
		clazzNames.add("TakeTrainsEntry");
		clazzNames.add("TunnelingEntry");
		clazzNames.add("TurnEntry");
		clazzNames.add("WipeEntry");

		//clazzNames.add("SetupEntry");
		// need to add "package" declaration in each class, and delegating methods...!
		for (String name : clazzNames){
			try {
				clazz = cm._class( "jaxbinfo." + name + "Info" );
				paramClazz = cm.ref("jaxb." + name);
				sourceVar = clazz.field(3, paramClazz, "source");
				modifiers = sourceVar.mods();
				modifiers.setPrivate();
				
				
				constructor = clazz.constructor(1);
				constructor.param(paramClazz, "source");
				block = constructor.body();
				block.directStatement("this.source = source;");
				
				clazzList.add( clazz );
				
				
			} catch (JClassAlreadyExistsException e) {
				e.printStackTrace();
			}
		}
			// write them out
		
		try {
			cm.build(new File("C:\\Users\\irvin_000\\workspace\\Tickay\\src\\"));
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
